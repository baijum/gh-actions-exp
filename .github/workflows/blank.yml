# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on pull request events but only for the "main" branch
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      # Runs a set of commands using the runners shell
      - name: Run another multi-line script
        run: |
          echo Add more actions to build,
          echo "test, and deploy your project(s)."

      # Get details link
      - name: Get "ci/prow/e2e" details link
        id: get-check
        uses: actions/github-script@v6
        with:
          script: |
            core.info(context.payload);
            core.info(context.payload.pull_request);
            core.info(context.payload.pull_request.head);
            // Use the PR head commit SHA
            const sha = context.payload.pull_request.head.sha;
            // Fetch check runs for this commit, filtering by check name
            const { data } = await github.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: sha,
              check_name: 'ci/prow/e2e'
            });
            
            if (data.total_count === 0) {
              core.info('No check runs found with name "ci/prow/e2e"');
            } else {
              // Assume the first matching check run is the one we want
              const checkRun = data.check_runs[0];
              core.setOutput('details_link', checkRun.details_url);
              core.info(`Found details URL: ${checkRun.details_url}`);
            }
